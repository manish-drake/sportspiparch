title Reliable PIP Transfer (Option 3)


actor "Video Recording Staff" as vidrec

vidrec -> "Scheduled Event" as eve: OpenEvent()
activate eve

create entity Metadata
eve -> Metadata: Create()
note right
    The metadata includes 
    general event information,
    local URI of media
    and checksum
end note

create "Media Sink" as sink
eve --> sink: CreateMediaSink()


create entity "PIP Folder" as pip
sink -> pip: Create()

group Iterate, until event completes
    vidrec -> eve: StartRecording()
    activate sink
    eve -> sink: Record()

    vidrec -> eve: PauseRecording()
    eve -> sink: Pause()

    activate pip
    sink -> pip: SaveVideo(fileA)
    
    activate Metadata
    sink -> Metadata: Save(name, checksum, ..)

    control "Upload Client" as client
    eve -> client: Upload(fileA)
    activate client

    control "Upload Server" as Server
    client -> Server: Upload(fileA, fileA_metadata)
    note right
        This shall be a background
        process. Details of this 
        process are in the chart
        File Upload Service
    end note
end

vidrec -> eve: CloseEvent()
pip --> eve: return(handle)
Metadata --> eve: return(handle)
eve -> client: Upload(metadata)
client -> Server: Upload(metadata)
Server -> "PIPs Repository": Save(pip)

deactivate pip
deactivate sink
deactivate Metadata



==End PIP Uploading==